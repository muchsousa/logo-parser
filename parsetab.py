
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programleftADDSUBleftMULDIVleftPOWADD AND ASSIGN BACKWARD BK CLEARSCREEN CLOSE_PAR COLON COMMA CS DIV ELSE END EQ_OP FALSE FO FORWARD GTE_OP GT_OP HEADING HOME ID IF LEFT LT LTE_OP LT_OP MUL NE_OP NOT NUM OPEN_PAR OR PD PENDOWN PENUP POW PU RANDOM RIGHT RT SETXY STRING SUB THEN TO TRUE TYPEIN WC WHILE WIPECLEAN WRITE XCOR YCOR\n    program : statement other_statement\n    \n    other_statement : statement other_statement\n        | empty \n    \n    statement : instruction \n        | variable_declaration\n        | procedure_declaration\n        | procedure_call\n        | if_then_else \n        | while_loop \n        | write \n    \n    instruction : FO number_expression \n        | FORWARD number_expression\n        | BK number_expression \n        | BACKWARD number_expression\n        | RT number_expression \n        | RIGHT expression\n        | LT number_expression \n        | LEFT number_expression\n        | PD \n        | PENDOWN\n        | PU \n        | PENUP\n        | WC \n        | WIPECLEAN\n        | CS \n        | CLEARSCREEN\n        | HOME\n        | HEADING\n        | TYPEIN\n        | SETXY number_expression COMMA number_expression\n        | XCOR number_expression\n        | YCOR number_expression\n    \n    variable_declaration : ID ASSIGN expression\n    \n    variable : COLON ID\n    \n    argument_list : argument_list COMMA argument\n        | argument\n    \n    argument : expression\n        | empty\n    \n    procedure_declaration : TO ID argument_list other_statement END\n    \n    expression_list : expression_list COMMA expression \n        | expression \n        | empty\n    \n    procedure_call : ID expression_list\n    \n    expression : OPEN_PAR expression CLOSE_PAR\n        | boolean_expression\n        | number_expression\n        | RANDOM\n        | string\n    \n    number_expression : number_expression ADD number_expression\n        | number_expression SUB number_expression\n        | number_expression MUL number_expression\n        | number_expression DIV number_expression\n        | number_expression POW number_expression\n    \n    number_expression : OPEN_PAR number_expression CLOSE_PAR\n    \n    number_expression : variable\n    \n    number_expression : NUM\n    \n    boolean_expression : relational_operation \n        | boolean_expression OR boolean_expression\n        | boolean_expression AND boolean_expression\n        | NOT boolean_expression\n        | variable\n        | TRUE\n        | FALSE\n    \n    relational_operation : expression GT_OP expression\n        | expression LT_OP expression\n        | expression GTE_OP expression\n        | expression LTE_OP expression\n        | expression EQ_OP expression\n        | expression NE_OP expression\n    \n    if_then_else : IF OPEN_PAR boolean_expression CLOSE_PAR THEN other_statement END\n        | IF OPEN_PAR boolean_expression CLOSE_PAR THEN other_statement ELSE other_statement END\n    \n    while_loop : WHILE OPEN_PAR boolean_expression CLOSE_PAR other_statement END\n    \n    write : WRITE expression \n        | WRITE string\n    \n    empty :\n    \n    string : STRING\n    '
    
_lr_action_items = {'FO':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[10,10,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,10,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,10,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,10,-39,-35,10,-72,-70,10,-71,]),'FORWARD':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[11,11,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,11,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,11,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,11,-39,-35,11,-72,-70,11,-71,]),'BK':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[12,12,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,12,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,12,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,12,-39,-35,12,-72,-70,12,-71,]),'BACKWARD':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[13,13,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,13,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,13,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,13,-39,-35,13,-72,-70,13,-71,]),'RT':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[14,14,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,14,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,14,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,14,-39,-35,14,-72,-70,14,-71,]),'RIGHT':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[15,15,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,15,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,15,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,15,-39,-35,15,-72,-70,15,-71,]),'LT':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[16,16,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,16,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,16,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,16,-39,-35,16,-72,-70,16,-71,]),'LEFT':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[17,17,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,17,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,17,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,17,-39,-35,17,-72,-70,17,-71,]),'PD':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[18,18,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,18,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,18,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,18,-39,-35,18,-72,-70,18,-71,]),'PENDOWN':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[19,19,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,19,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,19,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,19,-39,-35,19,-72,-70,19,-71,]),'PU':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[20,20,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,20,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,20,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,20,-39,-35,20,-72,-70,20,-71,]),'PENUP':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[21,21,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,21,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,21,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,21,-39,-35,21,-72,-70,21,-71,]),'WC':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[22,22,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,22,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,22,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,22,-39,-35,22,-72,-70,22,-71,]),'WIPECLEAN':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[23,23,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,23,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,23,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,23,-39,-35,23,-72,-70,23,-71,]),'CS':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[24,24,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,24,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,24,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,24,-39,-35,24,-72,-70,24,-71,]),'CLEARSCREEN':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[25,25,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,25,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,25,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,25,-39,-35,25,-72,-70,25,-71,]),'HOME':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[26,26,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,26,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,26,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,26,-39,-35,26,-72,-70,26,-71,]),'HEADING':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[27,27,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,27,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,27,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,27,-39,-35,27,-72,-70,27,-71,]),'TYPEIN':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[28,28,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,28,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,28,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,28,-39,-35,28,-72,-70,28,-71,]),'SETXY':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[29,29,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,29,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,29,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,29,-39,-35,29,-72,-70,29,-71,]),'XCOR':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[30,30,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,30,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,30,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,30,-39,-35,30,-72,-70,30,-71,]),'YCOR':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[31,31,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,31,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,31,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,31,-39,-35,31,-72,-70,31,-71,]),'ID':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,33,37,40,42,43,44,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[32,32,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,70,32,-11,-55,-56,82,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,32,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,32,-39,-35,32,-72,-70,32,-71,]),'TO':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[33,33,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,33,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,33,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,33,-39,-35,33,-72,-70,33,-71,]),'IF':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[34,34,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,34,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,34,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,34,-39,-35,34,-72,-70,34,-71,]),'WHILE':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[35,35,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,35,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,35,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,35,-39,-35,35,-72,-70,35,-71,]),'WRITE':([0,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,126,127,128,131,132,133,135,],[36,36,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,36,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-34,-60,-33,36,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-75,36,-39,-35,36,-72,-70,36,-71,]),'$end':([1,2,3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,38,39,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,73,74,75,82,94,97,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,126,131,132,135,],[0,-75,-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,-75,-1,-3,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-73,-48,-2,-34,-60,-33,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-39,-72,-70,-71,]),'END':([3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,39,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,70,73,74,75,82,94,97,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,],[-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,-75,-3,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-75,-73,-48,-2,-34,-60,-33,-75,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,126,-75,-75,-39,-35,-75,131,132,-72,-70,-75,135,-71,]),'ELSE':([3,4,5,6,7,8,9,18,19,20,21,22,23,24,25,26,27,28,32,37,39,40,42,43,45,46,47,48,49,51,52,53,54,55,57,58,59,60,61,62,64,65,67,68,69,73,74,75,82,94,97,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,126,128,130,131,132,135,],[-4,-5,-6,-7,-8,-9,-10,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-75,-75,-3,-11,-55,-56,-12,-13,-14,-15,-16,-45,-46,-47,-48,-57,-55,-62,-63,-76,-17,-18,-31,-32,-41,-43,-42,-73,-48,-2,-34,-60,-33,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-30,-40,-39,-75,133,-72,-70,-71,]),'OPEN_PAR':([10,11,12,13,14,15,16,17,29,30,31,32,34,35,36,41,50,56,66,70,71,72,76,77,78,79,80,83,84,85,86,87,88,92,93,96,98,123,],[41,41,41,41,41,50,41,41,41,41,41,50,71,72,50,41,50,50,50,50,50,50,41,41,41,41,41,50,50,50,50,50,50,50,50,41,50,50,]),'NUM':([10,11,12,13,14,15,16,17,29,30,31,32,36,41,50,56,66,70,71,72,76,77,78,79,80,83,84,85,86,87,88,92,93,96,98,123,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'COLON':([10,11,12,13,14,15,16,17,29,30,31,32,36,41,50,56,66,70,71,72,76,77,78,79,80,83,84,85,86,87,88,92,93,96,98,123,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'RANDOM':([15,32,36,50,56,66,70,71,72,83,84,85,86,87,88,92,93,98,123,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'NOT':([15,32,36,50,56,66,70,71,72,83,84,85,86,87,88,92,93,98,123,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'TRUE':([15,32,36,50,56,66,70,71,72,83,84,85,86,87,88,92,93,98,123,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'FALSE':([15,32,36,50,56,66,70,71,72,83,84,85,86,87,88,92,93,98,123,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'STRING':([15,32,36,50,56,66,70,71,72,83,84,85,86,87,88,92,93,98,123,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'ASSIGN':([32,],[66,]),'COMMA':([32,42,43,51,52,53,54,55,57,58,59,60,63,67,68,69,70,82,94,99,100,101,102,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,123,127,],[-75,-55,-56,-45,-46,-47,-48,-57,-55,-62,-63,-76,96,-41,98,-42,-75,-34,-60,123,-36,-37,-38,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,-40,-75,-35,]),'ADD':([40,42,43,45,46,47,48,52,57,61,62,63,64,65,81,82,90,91,105,106,107,108,109,110,120,],[76,-55,-56,76,76,76,76,76,-55,76,76,76,76,76,76,-34,76,-55,-49,-50,-51,-52,-53,-54,76,]),'SUB':([40,42,43,45,46,47,48,52,57,61,62,63,64,65,81,82,90,91,105,106,107,108,109,110,120,],[77,-55,-56,77,77,77,77,77,-55,77,77,77,77,77,77,-34,77,-55,-49,-50,-51,-52,-53,-54,77,]),'MUL':([40,42,43,45,46,47,48,52,57,61,62,63,64,65,81,82,90,91,105,106,107,108,109,110,120,],[78,-55,-56,78,78,78,78,78,-55,78,78,78,78,78,78,-34,78,-55,78,78,-51,-52,-53,-54,78,]),'DIV':([40,42,43,45,46,47,48,52,57,61,62,63,64,65,81,82,90,91,105,106,107,108,109,110,120,],[79,-55,-56,79,79,79,79,79,-55,79,79,79,79,79,79,-34,79,-55,79,79,-51,-52,-53,-54,79,]),'POW':([40,42,43,45,46,47,48,52,57,61,62,63,64,65,81,82,90,91,105,106,107,108,109,110,120,],[80,-55,-56,80,80,80,80,80,-55,80,80,80,80,80,80,-34,80,-55,80,80,80,80,-53,-54,80,]),'CLOSE_PAR':([42,43,51,52,53,54,55,57,58,59,60,81,82,89,90,91,94,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,],[-55,-56,-45,-46,-47,-48,-57,-55,-62,-63,-76,110,-34,117,110,-55,-60,124,125,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,-58,-59,]),'GT_OP':([42,43,49,51,52,53,54,55,57,58,59,60,67,73,74,82,89,90,91,94,95,97,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,],[-55,-56,83,-45,-46,-47,-48,-57,-55,-62,-63,-76,83,83,-48,-34,83,-46,-55,-45,83,83,83,-45,-45,-49,-50,-51,-52,-53,-54,83,83,83,83,83,83,-44,-45,-45,83,]),'LT_OP':([42,43,49,51,52,53,54,55,57,58,59,60,67,73,74,82,89,90,91,94,95,97,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,],[-55,-56,84,-45,-46,-47,-48,-57,-55,-62,-63,-76,84,84,-48,-34,84,-46,-55,-45,84,84,84,-45,-45,-49,-50,-51,-52,-53,-54,84,84,84,84,84,84,-44,-45,-45,84,]),'GTE_OP':([42,43,49,51,52,53,54,55,57,58,59,60,67,73,74,82,89,90,91,94,95,97,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,],[-55,-56,85,-45,-46,-47,-48,-57,-55,-62,-63,-76,85,85,-48,-34,85,-46,-55,-45,85,85,85,-45,-45,-49,-50,-51,-52,-53,-54,85,85,85,85,85,85,-44,-45,-45,85,]),'LTE_OP':([42,43,49,51,52,53,54,55,57,58,59,60,67,73,74,82,89,90,91,94,95,97,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,],[-55,-56,86,-45,-46,-47,-48,-57,-55,-62,-63,-76,86,86,-48,-34,86,-46,-55,-45,86,86,86,-45,-45,-49,-50,-51,-52,-53,-54,86,86,86,86,86,86,-44,-45,-45,86,]),'EQ_OP':([42,43,49,51,52,53,54,55,57,58,59,60,67,73,74,82,89,90,91,94,95,97,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,],[-55,-56,87,-45,-46,-47,-48,-57,-55,-62,-63,-76,87,87,-48,-34,87,-46,-55,-45,87,87,87,-45,-45,-49,-50,-51,-52,-53,-54,87,87,87,87,87,87,-44,-45,-45,87,]),'NE_OP':([42,43,49,51,52,53,54,55,57,58,59,60,67,73,74,82,89,90,91,94,95,97,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,],[-55,-56,88,-45,-46,-47,-48,-57,-55,-62,-63,-76,88,88,-48,-34,88,-46,-55,-45,88,88,88,-45,-45,-49,-50,-51,-52,-53,-54,88,88,88,88,88,88,-44,-45,-45,88,]),'OR':([42,43,51,52,53,54,55,57,58,59,60,82,91,94,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,],[-55,-56,92,-46,-47,-48,-57,-55,-62,-63,-76,-34,-61,92,92,92,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,92,92,]),'AND':([42,43,51,52,53,54,55,57,58,59,60,82,91,94,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,],[-55,-56,93,-46,-47,-48,-57,-55,-62,-63,-76,-34,-61,93,93,93,-49,-50,-51,-52,-53,-54,-64,-65,-66,-67,-68,-69,-44,93,93,]),'THEN':([124,],[128,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement':([0,2,37,99,125,128,133,],[2,37,37,37,37,37,37,]),'instruction':([0,2,37,99,125,128,133,],[3,3,3,3,3,3,3,]),'variable_declaration':([0,2,37,99,125,128,133,],[4,4,4,4,4,4,4,]),'procedure_declaration':([0,2,37,99,125,128,133,],[5,5,5,5,5,5,5,]),'procedure_call':([0,2,37,99,125,128,133,],[6,6,6,6,6,6,6,]),'if_then_else':([0,2,37,99,125,128,133,],[7,7,7,7,7,7,7,]),'while_loop':([0,2,37,99,125,128,133,],[8,8,8,8,8,8,8,]),'write':([0,2,37,99,125,128,133,],[9,9,9,9,9,9,9,]),'other_statement':([2,37,99,125,128,133,],[38,75,122,129,130,134,]),'empty':([2,32,37,70,99,123,125,128,133,],[39,69,39,102,39,102,39,39,39,]),'number_expression':([10,11,12,13,14,15,16,17,29,30,31,32,36,41,50,56,66,70,71,72,76,77,78,79,80,83,84,85,86,87,88,92,93,96,98,123,],[40,45,46,47,48,52,61,62,63,64,65,52,52,81,90,52,52,52,52,52,105,106,107,108,109,52,52,52,52,52,52,52,52,120,52,52,]),'variable':([10,11,12,13,14,15,16,17,29,30,31,32,36,41,50,56,66,70,71,72,76,77,78,79,80,83,84,85,86,87,88,92,93,96,98,123,],[42,42,42,42,42,57,42,42,42,42,42,57,57,42,91,57,57,57,57,57,42,42,42,42,42,57,57,57,57,57,57,57,57,42,57,57,]),'expression':([15,32,36,50,56,66,70,71,72,83,84,85,86,87,88,92,93,98,123,],[49,67,73,89,95,97,101,95,95,111,112,113,114,115,116,95,95,121,101,]),'boolean_expression':([15,32,36,50,56,66,70,71,72,83,84,85,86,87,88,92,93,98,123,],[51,51,51,51,94,51,51,103,104,51,51,51,51,51,51,118,119,51,51,]),'string':([15,32,36,50,56,66,70,71,72,83,84,85,86,87,88,92,93,98,123,],[54,54,74,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'relational_operation':([15,32,36,50,56,66,70,71,72,83,84,85,86,87,88,92,93,98,123,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'expression_list':([32,],[68,]),'argument_list':([70,],[99,]),'argument':([70,123,],[100,127,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement other_statement','program',2,'p_program','grammar.py',16),
  ('other_statement -> statement other_statement','other_statement',2,'p_other_statement','grammar.py',27),
  ('other_statement -> empty','other_statement',1,'p_other_statement','grammar.py',28),
  ('statement -> instruction','statement',1,'p_statement','grammar.py',41),
  ('statement -> variable_declaration','statement',1,'p_statement','grammar.py',42),
  ('statement -> procedure_declaration','statement',1,'p_statement','grammar.py',43),
  ('statement -> procedure_call','statement',1,'p_statement','grammar.py',44),
  ('statement -> if_then_else','statement',1,'p_statement','grammar.py',45),
  ('statement -> while_loop','statement',1,'p_statement','grammar.py',46),
  ('statement -> write','statement',1,'p_statement','grammar.py',47),
  ('instruction -> FO number_expression','instruction',2,'p_instruction','grammar.py',56),
  ('instruction -> FORWARD number_expression','instruction',2,'p_instruction','grammar.py',57),
  ('instruction -> BK number_expression','instruction',2,'p_instruction','grammar.py',58),
  ('instruction -> BACKWARD number_expression','instruction',2,'p_instruction','grammar.py',59),
  ('instruction -> RT number_expression','instruction',2,'p_instruction','grammar.py',60),
  ('instruction -> RIGHT expression','instruction',2,'p_instruction','grammar.py',61),
  ('instruction -> LT number_expression','instruction',2,'p_instruction','grammar.py',62),
  ('instruction -> LEFT number_expression','instruction',2,'p_instruction','grammar.py',63),
  ('instruction -> PD','instruction',1,'p_instruction','grammar.py',64),
  ('instruction -> PENDOWN','instruction',1,'p_instruction','grammar.py',65),
  ('instruction -> PU','instruction',1,'p_instruction','grammar.py',66),
  ('instruction -> PENUP','instruction',1,'p_instruction','grammar.py',67),
  ('instruction -> WC','instruction',1,'p_instruction','grammar.py',68),
  ('instruction -> WIPECLEAN','instruction',1,'p_instruction','grammar.py',69),
  ('instruction -> CS','instruction',1,'p_instruction','grammar.py',70),
  ('instruction -> CLEARSCREEN','instruction',1,'p_instruction','grammar.py',71),
  ('instruction -> HOME','instruction',1,'p_instruction','grammar.py',72),
  ('instruction -> HEADING','instruction',1,'p_instruction','grammar.py',73),
  ('instruction -> TYPEIN','instruction',1,'p_instruction','grammar.py',74),
  ('instruction -> SETXY number_expression COMMA number_expression','instruction',4,'p_instruction','grammar.py',75),
  ('instruction -> XCOR number_expression','instruction',2,'p_instruction','grammar.py',76),
  ('instruction -> YCOR number_expression','instruction',2,'p_instruction','grammar.py',77),
  ('variable_declaration -> ID ASSIGN expression','variable_declaration',3,'p_variable_declaration','grammar.py',89),
  ('variable -> COLON ID','variable',2,'p_variable','grammar.py',103),
  ('argument_list -> argument_list COMMA argument','argument_list',3,'p_argument_list','grammar.py',109),
  ('argument_list -> argument','argument_list',1,'p_argument_list','grammar.py',110),
  ('argument -> expression','argument',1,'p_argument','grammar.py',119),
  ('argument -> empty','argument',1,'p_argument','grammar.py',120),
  ('procedure_declaration -> TO ID argument_list other_statement END','procedure_declaration',5,'p_procedure_declaration','grammar.py',126),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','grammar.py',136),
  ('expression_list -> expression','expression_list',1,'p_expression_list','grammar.py',137),
  ('expression_list -> empty','expression_list',1,'p_expression_list','grammar.py',138),
  ('procedure_call -> ID expression_list','procedure_call',2,'p_procedure_call','grammar.py',147),
  ('expression -> OPEN_PAR expression CLOSE_PAR','expression',3,'p_expression','grammar.py',154),
  ('expression -> boolean_expression','expression',1,'p_expression','grammar.py',155),
  ('expression -> number_expression','expression',1,'p_expression','grammar.py',156),
  ('expression -> RANDOM','expression',1,'p_expression','grammar.py',157),
  ('expression -> string','expression',1,'p_expression','grammar.py',158),
  ('number_expression -> number_expression ADD number_expression','number_expression',3,'p_number_expression_operation','grammar.py',173),
  ('number_expression -> number_expression SUB number_expression','number_expression',3,'p_number_expression_operation','grammar.py',174),
  ('number_expression -> number_expression MUL number_expression','number_expression',3,'p_number_expression_operation','grammar.py',175),
  ('number_expression -> number_expression DIV number_expression','number_expression',3,'p_number_expression_operation','grammar.py',176),
  ('number_expression -> number_expression POW number_expression','number_expression',3,'p_number_expression_operation','grammar.py',177),
  ('number_expression -> OPEN_PAR number_expression CLOSE_PAR','number_expression',3,'p_number_expression_par','grammar.py',183),
  ('number_expression -> variable','number_expression',1,'p_number_expression_variable','grammar.py',195),
  ('number_expression -> NUM','number_expression',1,'p_number_expression_num','grammar.py',216),
  ('boolean_expression -> relational_operation','boolean_expression',1,'p_boolean_expression','grammar.py',226),
  ('boolean_expression -> boolean_expression OR boolean_expression','boolean_expression',3,'p_boolean_expression','grammar.py',227),
  ('boolean_expression -> boolean_expression AND boolean_expression','boolean_expression',3,'p_boolean_expression','grammar.py',228),
  ('boolean_expression -> NOT boolean_expression','boolean_expression',2,'p_boolean_expression','grammar.py',229),
  ('boolean_expression -> variable','boolean_expression',1,'p_boolean_expression','grammar.py',230),
  ('boolean_expression -> TRUE','boolean_expression',1,'p_boolean_expression','grammar.py',231),
  ('boolean_expression -> FALSE','boolean_expression',1,'p_boolean_expression','grammar.py',232),
  ('relational_operation -> expression GT_OP expression','relational_operation',3,'p_relational_operation','grammar.py',255),
  ('relational_operation -> expression LT_OP expression','relational_operation',3,'p_relational_operation','grammar.py',256),
  ('relational_operation -> expression GTE_OP expression','relational_operation',3,'p_relational_operation','grammar.py',257),
  ('relational_operation -> expression LTE_OP expression','relational_operation',3,'p_relational_operation','grammar.py',258),
  ('relational_operation -> expression EQ_OP expression','relational_operation',3,'p_relational_operation','grammar.py',259),
  ('relational_operation -> expression NE_OP expression','relational_operation',3,'p_relational_operation','grammar.py',260),
  ('if_then_else -> IF OPEN_PAR boolean_expression CLOSE_PAR THEN other_statement END','if_then_else',7,'p_if_then_else','grammar.py',272),
  ('if_then_else -> IF OPEN_PAR boolean_expression CLOSE_PAR THEN other_statement ELSE other_statement END','if_then_else',9,'p_if_then_else','grammar.py',273),
  ('while_loop -> WHILE OPEN_PAR boolean_expression CLOSE_PAR other_statement END','while_loop',6,'p_while_loop','grammar.py',353),
  ('write -> WRITE expression','write',2,'p_write','grammar.py',359),
  ('write -> WRITE string','write',2,'p_write','grammar.py',360),
  ('empty -> <empty>','empty',0,'p_empty','grammar.py',366),
  ('string -> STRING','string',1,'p_string','grammar.py',372),
]
